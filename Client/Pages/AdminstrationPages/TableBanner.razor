<div class="container-fluid mt-4">
    <div class="row g-4">
        <div class="col-lg-2 cursor-pointer">
            <div class="card text-white bg-primary h-100">
                <div class="card-body d-flex align-items-center">
                    <i class="bi bi-people display-6 me-3"></i>
                    <div>
                        <h5 class="card-title mb-0">Employees</h5>
                        <span class="badge bg-dark fs-6">@Employees.Count</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursor-pointer" @onclick="VacationClicked">
            <div class="card text-white bg-success h-100">
                <div class="card-body d-flex align-items-center">
                    <i class="bi bi-backpack3 display-6 me-3"></i>
                    <div>
                        <h5 class="card-title mb-0">Vacation</h5>
                        <span class="badge bg-dark fs-6">@Vacations.Count</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursor-pointer" @onclick="OvertimeClicked">
            <div class="card text-white bg-danger h-100">
                <div class="card-body d-flex align-items-center">
                    <i class="bi bi-stopwatch display-6 me-3"></i>
                    <div>
                        <h5 class="card-title mb-0">Overtime</h5>
                        <span class="badge bg-dark fs-6">@Overtimes.Count</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursor-pointer" @onclick="HealthClicked">
            <div class="card text-white bg-warning h-100">
                <div class="card-body d-flex align-items-center">
                    <i class="bi bi-hospital display-6 me-3"></i>
                    <div>
                        <h5 class="card-title mb-0">Health</h5>
                        <span class="badge bg-dark fs-6">@Health.Count</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursor-pointer" @onclick="SanctionClicked">
            <div class="card text-white bg-info h-100">
                <div class="card-body d-flex align-items-center">
                    <i class="bi bi-octagon display-6 me-3"></i>
                    <div>
                        <h5 class="card-title mb-0">Sanctions</h5>
                        <span class="badge bg-dark fs-6">@Sanctions.Count</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-2 cursor-pointer">
            <div class="card text-white bg-dark h-100">
                <div class="card-body d-flex align-items-center">
                    <i class="bi bi-slack display-6 me-3"></i>
                    <div>
                        <h5 class="card-title mb-0">Departments</h5>
                        <span class="badge bg-light text-dark fs-6">@Departments.Count</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .cursor-pointer {
        cursor: pointer;
    }
</style>

@code {
    public List<Employee> Employees { get; set; } = new();
    public List<Vacation> Vacations { get; set; } = new();
    public List<Overtime> Overtimes { get; set; } = new();
    public List<Doctor> Health { get; set; } = new();
    public List<Sanction> Sanctions { get; set; } = new();
    public List<Department> Departments { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        allState.Action += StateHasChanged;
        await LoadDefaults();
    }

    async Task LoadDefaults()
    {
        Employees = await employeeService.GetAll(Constants.EmployeeBaseUrl);
        Departments = await departmentService.GetAll(Constants.DepartmentBaseUrl);
        Health = await doctorService.GetAll(Constants.DoctorBaseUrl);
        Overtimes = await overtimeService.GetAll(Constants.OvertimeBaseUrl);
        Sanctions = await sanctionService.GetAll(Constants.SanctionBaseUrl);
        Vacations = await vacationService.GetAll(Constants.VacationBaseUrl);
    }

    void HealthClicked() => allState.HealthClicked();
    void OvertimeClicked() => allState.OvertimeClicked();
    void VacationClicked() => allState.VacationClicked();
    void SanctionClicked() => allState.SanctionClicked();

    public void Dispose()
    {
        allState.Action -= StateHasChanged;
    }
}
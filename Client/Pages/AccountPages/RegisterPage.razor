@page "/identity/account/register"
@layout AuthenticationLayout

<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <EditForm Enhance Model="User" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <div class="card bg-dark" style="opacity:0.5;margin-top:50%; border-radius:10px;color:white;font-weight:bold">
                    <div class="card-header text-center fs-5 mb-2"> Register an account</div>
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                            <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                <img style="border-radius:20px" src="../images/companylogos/logo.png" height="50" width="50" />
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Fullname</label>
                            <InputText @bind-Value="User.Fullname" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <input type="@passwordInputType" @bind="User.Password" class="form-control" />
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Confirm Password</label>
                            <input type="@passwordInputType" @bind="User.ConfirmPassword" class="form-control" />
                        </div>
                        <div class="form-group mt-3">
                            <input type="checkbox" @bind="showPassword" /> Show Password
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Have account already?
                            <a class="btn-link" href="identity/account/login">Sign In</a>
                        </span>
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4"></div>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();
	// show password
    bool showPassword = false;
    string passwordInputType => showPassword ? "text" : "password";
    //
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }
   
    async Task HandleRegister()
    {

		ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
    
        if (result.Flag)
        {
            await DisplayDiaLog(result.Message, "Success");
            User = new();
        }
        else
        {
            await DisplayDiaLog(result.Message, "Alert!");
        }
        ShowLoadingButton = false;  
    }
    private async Task DisplayDiaLog(String content, string title)
    {
        await dialogService.AlertAsync(content, title);
    }
    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isuserAuthenticated = user.Identity!.IsAuthenticated;
        if (isuserAuthenticated)
        {
            NavManager.NavigateTo("/home/dashboard"); 

    }
    }
}